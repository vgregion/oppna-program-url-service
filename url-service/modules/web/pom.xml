<?xml version="1.0"?>
<!--
This is the Web-app Maven POM.


Template version: 1.4
Generation time : 2010-09-14 14:37:13 CEST
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>se.vgregion.url-service</groupId>
    <artifactId>url-service-url-service</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>
  <groupId>se.vgregion.url-service</groupId>
  <artifactId>url-service-url-service-module-web</artifactId>
  <packaging>war</packaging>
  <name>${project.artifactId}</name>

  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <!-- Configure eclipse plug-in to generate a context root that does not have the version number on it -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <configuration>
          <wtpContextName>${project.artifactId}</wtpContextName>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>url-service-url-service-composite-webcomp</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>se.vgregion.javg</groupId>
      <artifactId>javg-rt-support</artifactId>
      <version>${javg.version}</version>
    </dependency>
    <dependency>
      <!-- Use the resource-loading servlet from Spring-JS -->
      <groupId>org.springframework.webflow</groupId>
      <artifactId>org.springframework.js</artifactId>
      <version>2.0.5.RELEASE</version>
    </dependency>
    <dependency>
      <!-- required by the Spring-JS resource-loading servlet -->
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
    </dependency>
    <!--
      We use a Servlet Filter from spring-web to control UTF-8 encodings.
      Facelets doesn't do this for us.
    -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>
    
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
    </dependency>
  </dependencies>
</project>
